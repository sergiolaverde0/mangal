/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SeriesCommentSearchResponseV1ResultsMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeriesCommentSearchResponseV1ResultsMetadata{}

// SeriesCommentSearchResponseV1ResultsMetadata struct for SeriesCommentSearchResponseV1ResultsMetadata
type SeriesCommentSearchResponseV1ResultsMetadata struct {
	AuthorSeriesRating *float32 `json:"author_series_rating,omitempty"`
	CurrentUserUsefulRating *bool `json:"current_user_useful_rating,omitempty"`
}

// NewSeriesCommentSearchResponseV1ResultsMetadata instantiates a new SeriesCommentSearchResponseV1ResultsMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesCommentSearchResponseV1ResultsMetadata() *SeriesCommentSearchResponseV1ResultsMetadata {
	this := SeriesCommentSearchResponseV1ResultsMetadata{}
	return &this
}

// NewSeriesCommentSearchResponseV1ResultsMetadataWithDefaults instantiates a new SeriesCommentSearchResponseV1ResultsMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesCommentSearchResponseV1ResultsMetadataWithDefaults() *SeriesCommentSearchResponseV1ResultsMetadata {
	this := SeriesCommentSearchResponseV1ResultsMetadata{}
	return &this
}

// GetAuthorSeriesRating returns the AuthorSeriesRating field value if set, zero value otherwise.
func (o *SeriesCommentSearchResponseV1ResultsMetadata) GetAuthorSeriesRating() float32 {
	if o == nil || IsNil(o.AuthorSeriesRating) {
		var ret float32
		return ret
	}
	return *o.AuthorSeriesRating
}

// GetAuthorSeriesRatingOk returns a tuple with the AuthorSeriesRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesCommentSearchResponseV1ResultsMetadata) GetAuthorSeriesRatingOk() (*float32, bool) {
	if o == nil || IsNil(o.AuthorSeriesRating) {
		return nil, false
	}
	return o.AuthorSeriesRating, true
}

// HasAuthorSeriesRating returns a boolean if a field has been set.
func (o *SeriesCommentSearchResponseV1ResultsMetadata) HasAuthorSeriesRating() bool {
	if o != nil && !IsNil(o.AuthorSeriesRating) {
		return true
	}

	return false
}

// SetAuthorSeriesRating gets a reference to the given float32 and assigns it to the AuthorSeriesRating field.
func (o *SeriesCommentSearchResponseV1ResultsMetadata) SetAuthorSeriesRating(v float32) {
	o.AuthorSeriesRating = &v
}

// GetCurrentUserUsefulRating returns the CurrentUserUsefulRating field value if set, zero value otherwise.
func (o *SeriesCommentSearchResponseV1ResultsMetadata) GetCurrentUserUsefulRating() bool {
	if o == nil || IsNil(o.CurrentUserUsefulRating) {
		var ret bool
		return ret
	}
	return *o.CurrentUserUsefulRating
}

// GetCurrentUserUsefulRatingOk returns a tuple with the CurrentUserUsefulRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesCommentSearchResponseV1ResultsMetadata) GetCurrentUserUsefulRatingOk() (*bool, bool) {
	if o == nil || IsNil(o.CurrentUserUsefulRating) {
		return nil, false
	}
	return o.CurrentUserUsefulRating, true
}

// HasCurrentUserUsefulRating returns a boolean if a field has been set.
func (o *SeriesCommentSearchResponseV1ResultsMetadata) HasCurrentUserUsefulRating() bool {
	if o != nil && !IsNil(o.CurrentUserUsefulRating) {
		return true
	}

	return false
}

// SetCurrentUserUsefulRating gets a reference to the given bool and assigns it to the CurrentUserUsefulRating field.
func (o *SeriesCommentSearchResponseV1ResultsMetadata) SetCurrentUserUsefulRating(v bool) {
	o.CurrentUserUsefulRating = &v
}

func (o SeriesCommentSearchResponseV1ResultsMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeriesCommentSearchResponseV1ResultsMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorSeriesRating) {
		toSerialize["author_series_rating"] = o.AuthorSeriesRating
	}
	if !IsNil(o.CurrentUserUsefulRating) {
		toSerialize["current_user_useful_rating"] = o.CurrentUserUsefulRating
	}
	return toSerialize, nil
}

type NullableSeriesCommentSearchResponseV1ResultsMetadata struct {
	value *SeriesCommentSearchResponseV1ResultsMetadata
	isSet bool
}

func (v NullableSeriesCommentSearchResponseV1ResultsMetadata) Get() *SeriesCommentSearchResponseV1ResultsMetadata {
	return v.value
}

func (v *NullableSeriesCommentSearchResponseV1ResultsMetadata) Set(val *SeriesCommentSearchResponseV1ResultsMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesCommentSearchResponseV1ResultsMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesCommentSearchResponseV1ResultsMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesCommentSearchResponseV1ResultsMetadata(val *SeriesCommentSearchResponseV1ResultsMetadata) *NullableSeriesCommentSearchResponseV1ResultsMetadata {
	return &NullableSeriesCommentSearchResponseV1ResultsMetadata{value: val, isSet: true}
}

func (v NullableSeriesCommentSearchResponseV1ResultsMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesCommentSearchResponseV1ResultsMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


