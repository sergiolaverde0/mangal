/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthorsSeriesListResponseV1SeriesListMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthorsSeriesListResponseV1SeriesListMetadata{}

// AuthorsSeriesListResponseV1SeriesListMetadata struct for AuthorsSeriesListResponseV1SeriesListMetadata
type AuthorsSeriesListResponseV1SeriesListMetadata struct {
	UserList *ListsSeriesModelV1 `json:"user_list,omitempty"`
}

// NewAuthorsSeriesListResponseV1SeriesListMetadata instantiates a new AuthorsSeriesListResponseV1SeriesListMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorsSeriesListResponseV1SeriesListMetadata() *AuthorsSeriesListResponseV1SeriesListMetadata {
	this := AuthorsSeriesListResponseV1SeriesListMetadata{}
	return &this
}

// NewAuthorsSeriesListResponseV1SeriesListMetadataWithDefaults instantiates a new AuthorsSeriesListResponseV1SeriesListMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorsSeriesListResponseV1SeriesListMetadataWithDefaults() *AuthorsSeriesListResponseV1SeriesListMetadata {
	this := AuthorsSeriesListResponseV1SeriesListMetadata{}
	return &this
}

// GetUserList returns the UserList field value if set, zero value otherwise.
func (o *AuthorsSeriesListResponseV1SeriesListMetadata) GetUserList() ListsSeriesModelV1 {
	if o == nil || IsNil(o.UserList) {
		var ret ListsSeriesModelV1
		return ret
	}
	return *o.UserList
}

// GetUserListOk returns a tuple with the UserList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorsSeriesListResponseV1SeriesListMetadata) GetUserListOk() (*ListsSeriesModelV1, bool) {
	if o == nil || IsNil(o.UserList) {
		return nil, false
	}
	return o.UserList, true
}

// HasUserList returns a boolean if a field has been set.
func (o *AuthorsSeriesListResponseV1SeriesListMetadata) HasUserList() bool {
	if o != nil && !IsNil(o.UserList) {
		return true
	}

	return false
}

// SetUserList gets a reference to the given ListsSeriesModelV1 and assigns it to the UserList field.
func (o *AuthorsSeriesListResponseV1SeriesListMetadata) SetUserList(v ListsSeriesModelV1) {
	o.UserList = &v
}

func (o AuthorsSeriesListResponseV1SeriesListMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthorsSeriesListResponseV1SeriesListMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserList) {
		toSerialize["user_list"] = o.UserList
	}
	return toSerialize, nil
}

type NullableAuthorsSeriesListResponseV1SeriesListMetadata struct {
	value *AuthorsSeriesListResponseV1SeriesListMetadata
	isSet bool
}

func (v NullableAuthorsSeriesListResponseV1SeriesListMetadata) Get() *AuthorsSeriesListResponseV1SeriesListMetadata {
	return v.value
}

func (v *NullableAuthorsSeriesListResponseV1SeriesListMetadata) Set(val *AuthorsSeriesListResponseV1SeriesListMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorsSeriesListResponseV1SeriesListMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorsSeriesListResponseV1SeriesListMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorsSeriesListResponseV1SeriesListMetadata(val *AuthorsSeriesListResponseV1SeriesListMetadata) *NullableAuthorsSeriesListResponseV1SeriesListMetadata {
	return &NullableAuthorsSeriesListResponseV1SeriesListMetadata{value: val, isSet: true}
}

func (v NullableAuthorsSeriesListResponseV1SeriesListMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorsSeriesListResponseV1SeriesListMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


