/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ForumPollTempImageModelV1Url type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ForumPollTempImageModelV1Url{}

// ForumPollTempImageModelV1Url struct for ForumPollTempImageModelV1Url
type ForumPollTempImageModelV1Url struct {
	Original *string `json:"original,omitempty"`
	Thumb *string `json:"thumb,omitempty"`
}

// NewForumPollTempImageModelV1Url instantiates a new ForumPollTempImageModelV1Url object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForumPollTempImageModelV1Url() *ForumPollTempImageModelV1Url {
	this := ForumPollTempImageModelV1Url{}
	return &this
}

// NewForumPollTempImageModelV1UrlWithDefaults instantiates a new ForumPollTempImageModelV1Url object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForumPollTempImageModelV1UrlWithDefaults() *ForumPollTempImageModelV1Url {
	this := ForumPollTempImageModelV1Url{}
	return &this
}

// GetOriginal returns the Original field value if set, zero value otherwise.
func (o *ForumPollTempImageModelV1Url) GetOriginal() string {
	if o == nil || IsNil(o.Original) {
		var ret string
		return ret
	}
	return *o.Original
}

// GetOriginalOk returns a tuple with the Original field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForumPollTempImageModelV1Url) GetOriginalOk() (*string, bool) {
	if o == nil || IsNil(o.Original) {
		return nil, false
	}
	return o.Original, true
}

// HasOriginal returns a boolean if a field has been set.
func (o *ForumPollTempImageModelV1Url) HasOriginal() bool {
	if o != nil && !IsNil(o.Original) {
		return true
	}

	return false
}

// SetOriginal gets a reference to the given string and assigns it to the Original field.
func (o *ForumPollTempImageModelV1Url) SetOriginal(v string) {
	o.Original = &v
}

// GetThumb returns the Thumb field value if set, zero value otherwise.
func (o *ForumPollTempImageModelV1Url) GetThumb() string {
	if o == nil || IsNil(o.Thumb) {
		var ret string
		return ret
	}
	return *o.Thumb
}

// GetThumbOk returns a tuple with the Thumb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForumPollTempImageModelV1Url) GetThumbOk() (*string, bool) {
	if o == nil || IsNil(o.Thumb) {
		return nil, false
	}
	return o.Thumb, true
}

// HasThumb returns a boolean if a field has been set.
func (o *ForumPollTempImageModelV1Url) HasThumb() bool {
	if o != nil && !IsNil(o.Thumb) {
		return true
	}

	return false
}

// SetThumb gets a reference to the given string and assigns it to the Thumb field.
func (o *ForumPollTempImageModelV1Url) SetThumb(v string) {
	o.Thumb = &v
}

func (o ForumPollTempImageModelV1Url) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ForumPollTempImageModelV1Url) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Original) {
		toSerialize["original"] = o.Original
	}
	if !IsNil(o.Thumb) {
		toSerialize["thumb"] = o.Thumb
	}
	return toSerialize, nil
}

type NullableForumPollTempImageModelV1Url struct {
	value *ForumPollTempImageModelV1Url
	isSet bool
}

func (v NullableForumPollTempImageModelV1Url) Get() *ForumPollTempImageModelV1Url {
	return v.value
}

func (v *NullableForumPollTempImageModelV1Url) Set(val *ForumPollTempImageModelV1Url) {
	v.value = val
	v.isSet = true
}

func (v NullableForumPollTempImageModelV1Url) IsSet() bool {
	return v.isSet
}

func (v *NullableForumPollTempImageModelV1Url) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForumPollTempImageModelV1Url(val *ForumPollTempImageModelV1Url) *NullableForumPollTempImageModelV1Url {
	return &NullableForumPollTempImageModelV1Url{value: val, isSet: true}
}

func (v NullableForumPollTempImageModelV1Url) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForumPollTempImageModelV1Url) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


