/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListsModelUpdateV1Options type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListsModelUpdateV1Options{}

// ListsModelUpdateV1Options struct for ListsModelUpdateV1Options
type ListsModelUpdateV1Options struct {
	Public            *bool   `json:"public,omitempty"`
	Sort              *string `json:"sort,omitempty"`
	ShowRating        *bool   `json:"show_rating,omitempty"`
	ShowStatus        *bool   `json:"show_status,omitempty"`
	ShowComment       *string `json:"show_comment,omitempty"`
	ShowPerPage       *int64  `json:"show_per_page,omitempty"`
	ShowLatestChapter *bool   `json:"show_latest_chapter,omitempty"`
}

// NewListsModelUpdateV1Options instantiates a new ListsModelUpdateV1Options object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListsModelUpdateV1Options() *ListsModelUpdateV1Options {
	this := ListsModelUpdateV1Options{}
	return &this
}

// NewListsModelUpdateV1OptionsWithDefaults instantiates a new ListsModelUpdateV1Options object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListsModelUpdateV1OptionsWithDefaults() *ListsModelUpdateV1Options {
	this := ListsModelUpdateV1Options{}
	return &this
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *ListsModelUpdateV1Options) GetPublic() bool {
	if o == nil || IsNil(o.Public) {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsModelUpdateV1Options) GetPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *ListsModelUpdateV1Options) HasPublic() bool {
	if o != nil && !IsNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *ListsModelUpdateV1Options) SetPublic(v bool) {
	o.Public = &v
}

// GetSort returns the Sort field value if set, zero value otherwise.
func (o *ListsModelUpdateV1Options) GetSort() string {
	if o == nil || IsNil(o.Sort) {
		var ret string
		return ret
	}
	return *o.Sort
}

// GetSortOk returns a tuple with the Sort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsModelUpdateV1Options) GetSortOk() (*string, bool) {
	if o == nil || IsNil(o.Sort) {
		return nil, false
	}
	return o.Sort, true
}

// HasSort returns a boolean if a field has been set.
func (o *ListsModelUpdateV1Options) HasSort() bool {
	if o != nil && !IsNil(o.Sort) {
		return true
	}

	return false
}

// SetSort gets a reference to the given string and assigns it to the Sort field.
func (o *ListsModelUpdateV1Options) SetSort(v string) {
	o.Sort = &v
}

// GetShowRating returns the ShowRating field value if set, zero value otherwise.
func (o *ListsModelUpdateV1Options) GetShowRating() bool {
	if o == nil || IsNil(o.ShowRating) {
		var ret bool
		return ret
	}
	return *o.ShowRating
}

// GetShowRatingOk returns a tuple with the ShowRating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsModelUpdateV1Options) GetShowRatingOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowRating) {
		return nil, false
	}
	return o.ShowRating, true
}

// HasShowRating returns a boolean if a field has been set.
func (o *ListsModelUpdateV1Options) HasShowRating() bool {
	if o != nil && !IsNil(o.ShowRating) {
		return true
	}

	return false
}

// SetShowRating gets a reference to the given bool and assigns it to the ShowRating field.
func (o *ListsModelUpdateV1Options) SetShowRating(v bool) {
	o.ShowRating = &v
}

// GetShowStatus returns the ShowStatus field value if set, zero value otherwise.
func (o *ListsModelUpdateV1Options) GetShowStatus() bool {
	if o == nil || IsNil(o.ShowStatus) {
		var ret bool
		return ret
	}
	return *o.ShowStatus
}

// GetShowStatusOk returns a tuple with the ShowStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsModelUpdateV1Options) GetShowStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowStatus) {
		return nil, false
	}
	return o.ShowStatus, true
}

// HasShowStatus returns a boolean if a field has been set.
func (o *ListsModelUpdateV1Options) HasShowStatus() bool {
	if o != nil && !IsNil(o.ShowStatus) {
		return true
	}

	return false
}

// SetShowStatus gets a reference to the given bool and assigns it to the ShowStatus field.
func (o *ListsModelUpdateV1Options) SetShowStatus(v bool) {
	o.ShowStatus = &v
}

// GetShowComment returns the ShowComment field value if set, zero value otherwise.
func (o *ListsModelUpdateV1Options) GetShowComment() string {
	if o == nil || IsNil(o.ShowComment) {
		var ret string
		return ret
	}
	return *o.ShowComment
}

// GetShowCommentOk returns a tuple with the ShowComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsModelUpdateV1Options) GetShowCommentOk() (*string, bool) {
	if o == nil || IsNil(o.ShowComment) {
		return nil, false
	}
	return o.ShowComment, true
}

// HasShowComment returns a boolean if a field has been set.
func (o *ListsModelUpdateV1Options) HasShowComment() bool {
	if o != nil && !IsNil(o.ShowComment) {
		return true
	}

	return false
}

// SetShowComment gets a reference to the given string and assigns it to the ShowComment field.
func (o *ListsModelUpdateV1Options) SetShowComment(v string) {
	o.ShowComment = &v
}

// GetShowPerPage returns the ShowPerPage field value if set, zero value otherwise.
func (o *ListsModelUpdateV1Options) GetShowPerPage() int64 {
	if o == nil || IsNil(o.ShowPerPage) {
		var ret int64
		return ret
	}
	return *o.ShowPerPage
}

// GetShowPerPageOk returns a tuple with the ShowPerPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsModelUpdateV1Options) GetShowPerPageOk() (*int64, bool) {
	if o == nil || IsNil(o.ShowPerPage) {
		return nil, false
	}
	return o.ShowPerPage, true
}

// HasShowPerPage returns a boolean if a field has been set.
func (o *ListsModelUpdateV1Options) HasShowPerPage() bool {
	if o != nil && !IsNil(o.ShowPerPage) {
		return true
	}

	return false
}

// SetShowPerPage gets a reference to the given int64 and assigns it to the ShowPerPage field.
func (o *ListsModelUpdateV1Options) SetShowPerPage(v int64) {
	o.ShowPerPage = &v
}

// GetShowLatestChapter returns the ShowLatestChapter field value if set, zero value otherwise.
func (o *ListsModelUpdateV1Options) GetShowLatestChapter() bool {
	if o == nil || IsNil(o.ShowLatestChapter) {
		var ret bool
		return ret
	}
	return *o.ShowLatestChapter
}

// GetShowLatestChapterOk returns a tuple with the ShowLatestChapter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsModelUpdateV1Options) GetShowLatestChapterOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowLatestChapter) {
		return nil, false
	}
	return o.ShowLatestChapter, true
}

// HasShowLatestChapter returns a boolean if a field has been set.
func (o *ListsModelUpdateV1Options) HasShowLatestChapter() bool {
	if o != nil && !IsNil(o.ShowLatestChapter) {
		return true
	}

	return false
}

// SetShowLatestChapter gets a reference to the given bool and assigns it to the ShowLatestChapter field.
func (o *ListsModelUpdateV1Options) SetShowLatestChapter(v bool) {
	o.ShowLatestChapter = &v
}

func (o ListsModelUpdateV1Options) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListsModelUpdateV1Options) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Public) {
		toSerialize["public"] = o.Public
	}
	if !IsNil(o.Sort) {
		toSerialize["sort"] = o.Sort
	}
	if !IsNil(o.ShowRating) {
		toSerialize["show_rating"] = o.ShowRating
	}
	if !IsNil(o.ShowStatus) {
		toSerialize["show_status"] = o.ShowStatus
	}
	if !IsNil(o.ShowComment) {
		toSerialize["show_comment"] = o.ShowComment
	}
	if !IsNil(o.ShowPerPage) {
		toSerialize["show_per_page"] = o.ShowPerPage
	}
	if !IsNil(o.ShowLatestChapter) {
		toSerialize["show_latest_chapter"] = o.ShowLatestChapter
	}
	return toSerialize, nil
}

type NullableListsModelUpdateV1Options struct {
	value *ListsModelUpdateV1Options
	isSet bool
}

func (v NullableListsModelUpdateV1Options) Get() *ListsModelUpdateV1Options {
	return v.value
}

func (v *NullableListsModelUpdateV1Options) Set(val *ListsModelUpdateV1Options) {
	v.value = val
	v.isSet = true
}

func (v NullableListsModelUpdateV1Options) IsSet() bool {
	return v.isSet
}

func (v *NullableListsModelUpdateV1Options) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListsModelUpdateV1Options(val *ListsModelUpdateV1Options) *NullableListsModelUpdateV1Options {
	return &NullableListsModelUpdateV1Options{value: val, isSet: true}
}

func (v NullableListsModelUpdateV1Options) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListsModelUpdateV1Options) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
