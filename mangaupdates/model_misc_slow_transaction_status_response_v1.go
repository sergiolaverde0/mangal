/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MiscSlowTransactionStatusResponseV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MiscSlowTransactionStatusResponseV1{}

// MiscSlowTransactionStatusResponseV1 struct for MiscSlowTransactionStatusResponseV1
type MiscSlowTransactionStatusResponseV1 struct {
	State   *string  `json:"state,omitempty"`
	Error   *string  `json:"error,omitempty"`
	Percent *float32 `json:"percent,omitempty"`
	Done    *int64   `json:"done,omitempty"`
	Total   *int64   `json:"total,omitempty"`
	Return  *string  `json:"return,omitempty"`
}

// NewMiscSlowTransactionStatusResponseV1 instantiates a new MiscSlowTransactionStatusResponseV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMiscSlowTransactionStatusResponseV1() *MiscSlowTransactionStatusResponseV1 {
	this := MiscSlowTransactionStatusResponseV1{}
	return &this
}

// NewMiscSlowTransactionStatusResponseV1WithDefaults instantiates a new MiscSlowTransactionStatusResponseV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMiscSlowTransactionStatusResponseV1WithDefaults() *MiscSlowTransactionStatusResponseV1 {
	this := MiscSlowTransactionStatusResponseV1{}
	return &this
}

// GetState returns the State field value if set, zero value otherwise.
func (o *MiscSlowTransactionStatusResponseV1) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiscSlowTransactionStatusResponseV1) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *MiscSlowTransactionStatusResponseV1) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *MiscSlowTransactionStatusResponseV1) SetState(v string) {
	o.State = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *MiscSlowTransactionStatusResponseV1) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiscSlowTransactionStatusResponseV1) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *MiscSlowTransactionStatusResponseV1) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *MiscSlowTransactionStatusResponseV1) SetError(v string) {
	o.Error = &v
}

// GetPercent returns the Percent field value if set, zero value otherwise.
func (o *MiscSlowTransactionStatusResponseV1) GetPercent() float32 {
	if o == nil || IsNil(o.Percent) {
		var ret float32
		return ret
	}
	return *o.Percent
}

// GetPercentOk returns a tuple with the Percent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiscSlowTransactionStatusResponseV1) GetPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.Percent) {
		return nil, false
	}
	return o.Percent, true
}

// HasPercent returns a boolean if a field has been set.
func (o *MiscSlowTransactionStatusResponseV1) HasPercent() bool {
	if o != nil && !IsNil(o.Percent) {
		return true
	}

	return false
}

// SetPercent gets a reference to the given float32 and assigns it to the Percent field.
func (o *MiscSlowTransactionStatusResponseV1) SetPercent(v float32) {
	o.Percent = &v
}

// GetDone returns the Done field value if set, zero value otherwise.
func (o *MiscSlowTransactionStatusResponseV1) GetDone() int64 {
	if o == nil || IsNil(o.Done) {
		var ret int64
		return ret
	}
	return *o.Done
}

// GetDoneOk returns a tuple with the Done field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiscSlowTransactionStatusResponseV1) GetDoneOk() (*int64, bool) {
	if o == nil || IsNil(o.Done) {
		return nil, false
	}
	return o.Done, true
}

// HasDone returns a boolean if a field has been set.
func (o *MiscSlowTransactionStatusResponseV1) HasDone() bool {
	if o != nil && !IsNil(o.Done) {
		return true
	}

	return false
}

// SetDone gets a reference to the given int64 and assigns it to the Done field.
func (o *MiscSlowTransactionStatusResponseV1) SetDone(v int64) {
	o.Done = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *MiscSlowTransactionStatusResponseV1) GetTotal() int64 {
	if o == nil || IsNil(o.Total) {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiscSlowTransactionStatusResponseV1) GetTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *MiscSlowTransactionStatusResponseV1) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *MiscSlowTransactionStatusResponseV1) SetTotal(v int64) {
	o.Total = &v
}

// GetReturn returns the Return field value if set, zero value otherwise.
func (o *MiscSlowTransactionStatusResponseV1) GetReturn() string {
	if o == nil || IsNil(o.Return) {
		var ret string
		return ret
	}
	return *o.Return
}

// GetReturnOk returns a tuple with the Return field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MiscSlowTransactionStatusResponseV1) GetReturnOk() (*string, bool) {
	if o == nil || IsNil(o.Return) {
		return nil, false
	}
	return o.Return, true
}

// HasReturn returns a boolean if a field has been set.
func (o *MiscSlowTransactionStatusResponseV1) HasReturn() bool {
	if o != nil && !IsNil(o.Return) {
		return true
	}

	return false
}

// SetReturn gets a reference to the given string and assigns it to the Return field.
func (o *MiscSlowTransactionStatusResponseV1) SetReturn(v string) {
	o.Return = &v
}

func (o MiscSlowTransactionStatusResponseV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MiscSlowTransactionStatusResponseV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Percent) {
		toSerialize["percent"] = o.Percent
	}
	if !IsNil(o.Done) {
		toSerialize["done"] = o.Done
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Return) {
		toSerialize["return"] = o.Return
	}
	return toSerialize, nil
}

type NullableMiscSlowTransactionStatusResponseV1 struct {
	value *MiscSlowTransactionStatusResponseV1
	isSet bool
}

func (v NullableMiscSlowTransactionStatusResponseV1) Get() *MiscSlowTransactionStatusResponseV1 {
	return v.value
}

func (v *NullableMiscSlowTransactionStatusResponseV1) Set(val *MiscSlowTransactionStatusResponseV1) {
	v.value = val
	v.isSet = true
}

func (v NullableMiscSlowTransactionStatusResponseV1) IsSet() bool {
	return v.isSet
}

func (v *NullableMiscSlowTransactionStatusResponseV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMiscSlowTransactionStatusResponseV1(val *MiscSlowTransactionStatusResponseV1) *NullableMiscSlowTransactionStatusResponseV1 {
	return &NullableMiscSlowTransactionStatusResponseV1{value: val, isSet: true}
}

func (v NullableMiscSlowTransactionStatusResponseV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMiscSlowTransactionStatusResponseV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
