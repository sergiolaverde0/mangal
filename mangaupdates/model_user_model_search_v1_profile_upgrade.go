/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserModelSearchV1ProfileUpgrade type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserModelSearchV1ProfileUpgrade{}

// UserModelSearchV1ProfileUpgrade struct for UserModelSearchV1ProfileUpgrade
type UserModelSearchV1ProfileUpgrade struct {
	Requested *bool `json:"requested,omitempty"`
	Reason *string `json:"reason,omitempty"`
}

// NewUserModelSearchV1ProfileUpgrade instantiates a new UserModelSearchV1ProfileUpgrade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserModelSearchV1ProfileUpgrade() *UserModelSearchV1ProfileUpgrade {
	this := UserModelSearchV1ProfileUpgrade{}
	return &this
}

// NewUserModelSearchV1ProfileUpgradeWithDefaults instantiates a new UserModelSearchV1ProfileUpgrade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserModelSearchV1ProfileUpgradeWithDefaults() *UserModelSearchV1ProfileUpgrade {
	this := UserModelSearchV1ProfileUpgrade{}
	return &this
}

// GetRequested returns the Requested field value if set, zero value otherwise.
func (o *UserModelSearchV1ProfileUpgrade) GetRequested() bool {
	if o == nil || IsNil(o.Requested) {
		var ret bool
		return ret
	}
	return *o.Requested
}

// GetRequestedOk returns a tuple with the Requested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModelSearchV1ProfileUpgrade) GetRequestedOk() (*bool, bool) {
	if o == nil || IsNil(o.Requested) {
		return nil, false
	}
	return o.Requested, true
}

// HasRequested returns a boolean if a field has been set.
func (o *UserModelSearchV1ProfileUpgrade) HasRequested() bool {
	if o != nil && !IsNil(o.Requested) {
		return true
	}

	return false
}

// SetRequested gets a reference to the given bool and assigns it to the Requested field.
func (o *UserModelSearchV1ProfileUpgrade) SetRequested(v bool) {
	o.Requested = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *UserModelSearchV1ProfileUpgrade) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModelSearchV1ProfileUpgrade) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *UserModelSearchV1ProfileUpgrade) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *UserModelSearchV1ProfileUpgrade) SetReason(v string) {
	o.Reason = &v
}

func (o UserModelSearchV1ProfileUpgrade) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserModelSearchV1ProfileUpgrade) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Requested) {
		toSerialize["requested"] = o.Requested
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	return toSerialize, nil
}

type NullableUserModelSearchV1ProfileUpgrade struct {
	value *UserModelSearchV1ProfileUpgrade
	isSet bool
}

func (v NullableUserModelSearchV1ProfileUpgrade) Get() *UserModelSearchV1ProfileUpgrade {
	return v.value
}

func (v *NullableUserModelSearchV1ProfileUpgrade) Set(val *UserModelSearchV1ProfileUpgrade) {
	v.value = val
	v.isSet = true
}

func (v NullableUserModelSearchV1ProfileUpgrade) IsSet() bool {
	return v.isSet
}

func (v *NullableUserModelSearchV1ProfileUpgrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserModelSearchV1ProfileUpgrade(val *UserModelSearchV1ProfileUpgrade) *NullableUserModelSearchV1ProfileUpgrade {
	return &NullableUserModelSearchV1ProfileUpgrade{value: val, isSet: true}
}

func (v NullableUserModelSearchV1ProfileUpgrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserModelSearchV1ProfileUpgrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


