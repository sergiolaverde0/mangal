/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PublishersPublicationResponseV1Publisher type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublishersPublicationResponseV1Publisher{}

// PublishersPublicationResponseV1Publisher struct for PublishersPublicationResponseV1Publisher
type PublishersPublicationResponseV1Publisher struct {
	PublisherName *string `json:"publisher_name,omitempty"`
	PublisherId   *int64  `json:"publisher_id,omitempty"`
}

// NewPublishersPublicationResponseV1Publisher instantiates a new PublishersPublicationResponseV1Publisher object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublishersPublicationResponseV1Publisher() *PublishersPublicationResponseV1Publisher {
	this := PublishersPublicationResponseV1Publisher{}
	return &this
}

// NewPublishersPublicationResponseV1PublisherWithDefaults instantiates a new PublishersPublicationResponseV1Publisher object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublishersPublicationResponseV1PublisherWithDefaults() *PublishersPublicationResponseV1Publisher {
	this := PublishersPublicationResponseV1Publisher{}
	return &this
}

// GetPublisherName returns the PublisherName field value if set, zero value otherwise.
func (o *PublishersPublicationResponseV1Publisher) GetPublisherName() string {
	if o == nil || IsNil(o.PublisherName) {
		var ret string
		return ret
	}
	return *o.PublisherName
}

// GetPublisherNameOk returns a tuple with the PublisherName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishersPublicationResponseV1Publisher) GetPublisherNameOk() (*string, bool) {
	if o == nil || IsNil(o.PublisherName) {
		return nil, false
	}
	return o.PublisherName, true
}

// HasPublisherName returns a boolean if a field has been set.
func (o *PublishersPublicationResponseV1Publisher) HasPublisherName() bool {
	if o != nil && !IsNil(o.PublisherName) {
		return true
	}

	return false
}

// SetPublisherName gets a reference to the given string and assigns it to the PublisherName field.
func (o *PublishersPublicationResponseV1Publisher) SetPublisherName(v string) {
	o.PublisherName = &v
}

// GetPublisherId returns the PublisherId field value if set, zero value otherwise.
func (o *PublishersPublicationResponseV1Publisher) GetPublisherId() int64 {
	if o == nil || IsNil(o.PublisherId) {
		var ret int64
		return ret
	}
	return *o.PublisherId
}

// GetPublisherIdOk returns a tuple with the PublisherId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishersPublicationResponseV1Publisher) GetPublisherIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PublisherId) {
		return nil, false
	}
	return o.PublisherId, true
}

// HasPublisherId returns a boolean if a field has been set.
func (o *PublishersPublicationResponseV1Publisher) HasPublisherId() bool {
	if o != nil && !IsNil(o.PublisherId) {
		return true
	}

	return false
}

// SetPublisherId gets a reference to the given int64 and assigns it to the PublisherId field.
func (o *PublishersPublicationResponseV1Publisher) SetPublisherId(v int64) {
	o.PublisherId = &v
}

func (o PublishersPublicationResponseV1Publisher) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublishersPublicationResponseV1Publisher) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PublisherName) {
		toSerialize["publisher_name"] = o.PublisherName
	}
	if !IsNil(o.PublisherId) {
		toSerialize["publisher_id"] = o.PublisherId
	}
	return toSerialize, nil
}

type NullablePublishersPublicationResponseV1Publisher struct {
	value *PublishersPublicationResponseV1Publisher
	isSet bool
}

func (v NullablePublishersPublicationResponseV1Publisher) Get() *PublishersPublicationResponseV1Publisher {
	return v.value
}

func (v *NullablePublishersPublicationResponseV1Publisher) Set(val *PublishersPublicationResponseV1Publisher) {
	v.value = val
	v.isSet = true
}

func (v NullablePublishersPublicationResponseV1Publisher) IsSet() bool {
	return v.isSet
}

func (v *NullablePublishersPublicationResponseV1Publisher) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublishersPublicationResponseV1Publisher(val *PublishersPublicationResponseV1Publisher) *NullablePublishersPublicationResponseV1Publisher {
	return &NullablePublishersPublicationResponseV1Publisher{value: val, isSet: true}
}

func (v NullablePublishersPublicationResponseV1Publisher) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublishersPublicationResponseV1Publisher) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
