/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserGroupModelUpdateV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserGroupModelUpdateV1{}

// UserGroupModelUpdateV1 struct for UserGroupModelUpdateV1
type UserGroupModelUpdateV1 struct {
	Name string `json:"name"`
	Description string `json:"description"`
}

// NewUserGroupModelUpdateV1 instantiates a new UserGroupModelUpdateV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserGroupModelUpdateV1(name string, description string) *UserGroupModelUpdateV1 {
	this := UserGroupModelUpdateV1{}
	this.Name = name
	this.Description = description
	return &this
}

// NewUserGroupModelUpdateV1WithDefaults instantiates a new UserGroupModelUpdateV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserGroupModelUpdateV1WithDefaults() *UserGroupModelUpdateV1 {
	this := UserGroupModelUpdateV1{}
	return &this
}

// GetName returns the Name field value
func (o *UserGroupModelUpdateV1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UserGroupModelUpdateV1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UserGroupModelUpdateV1) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *UserGroupModelUpdateV1) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *UserGroupModelUpdateV1) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *UserGroupModelUpdateV1) SetDescription(v string) {
	o.Description = v
}

func (o UserGroupModelUpdateV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserGroupModelUpdateV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	return toSerialize, nil
}

type NullableUserGroupModelUpdateV1 struct {
	value *UserGroupModelUpdateV1
	isSet bool
}

func (v NullableUserGroupModelUpdateV1) Get() *UserGroupModelUpdateV1 {
	return v.value
}

func (v *NullableUserGroupModelUpdateV1) Set(val *UserGroupModelUpdateV1) {
	v.value = val
	v.isSet = true
}

func (v NullableUserGroupModelUpdateV1) IsSet() bool {
	return v.isSet
}

func (v *NullableUserGroupModelUpdateV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserGroupModelUpdateV1(val *UserGroupModelUpdateV1) *NullableUserGroupModelUpdateV1 {
	return &NullableUserGroupModelUpdateV1{value: val, isSet: true}
}

func (v NullableUserGroupModelUpdateV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserGroupModelUpdateV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


