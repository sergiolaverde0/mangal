/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SeriesRatingModelV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeriesRatingModelV1{}

// SeriesRatingModelV1 struct for SeriesRatingModelV1
type SeriesRatingModelV1 struct {
	Rating float32 `json:"rating"`
	LastUpdated *TimeV1 `json:"last_updated,omitempty"`
}

// NewSeriesRatingModelV1 instantiates a new SeriesRatingModelV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesRatingModelV1(rating float32) *SeriesRatingModelV1 {
	this := SeriesRatingModelV1{}
	this.Rating = rating
	return &this
}

// NewSeriesRatingModelV1WithDefaults instantiates a new SeriesRatingModelV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesRatingModelV1WithDefaults() *SeriesRatingModelV1 {
	this := SeriesRatingModelV1{}
	return &this
}

// GetRating returns the Rating field value
func (o *SeriesRatingModelV1) GetRating() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rating
}

// GetRatingOk returns a tuple with the Rating field value
// and a boolean to check if the value has been set.
func (o *SeriesRatingModelV1) GetRatingOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rating, true
}

// SetRating sets field value
func (o *SeriesRatingModelV1) SetRating(v float32) {
	o.Rating = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *SeriesRatingModelV1) GetLastUpdated() TimeV1 {
	if o == nil || IsNil(o.LastUpdated) {
		var ret TimeV1
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesRatingModelV1) GetLastUpdatedOk() (*TimeV1, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *SeriesRatingModelV1) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given TimeV1 and assigns it to the LastUpdated field.
func (o *SeriesRatingModelV1) SetLastUpdated(v TimeV1) {
	o.LastUpdated = &v
}

func (o SeriesRatingModelV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeriesRatingModelV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rating"] = o.Rating
	if !IsNil(o.LastUpdated) {
		toSerialize["last_updated"] = o.LastUpdated
	}
	return toSerialize, nil
}

type NullableSeriesRatingModelV1 struct {
	value *SeriesRatingModelV1
	isSet bool
}

func (v NullableSeriesRatingModelV1) Get() *SeriesRatingModelV1 {
	return v.value
}

func (v *NullableSeriesRatingModelV1) Set(val *SeriesRatingModelV1) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesRatingModelV1) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesRatingModelV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesRatingModelV1(val *SeriesRatingModelV1) *NullableSeriesRatingModelV1 {
	return &NullableSeriesRatingModelV1{value: val, isSet: true}
}

func (v NullableSeriesRatingModelV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesRatingModelV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


