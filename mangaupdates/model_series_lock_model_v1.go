/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SeriesLockModelV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeriesLockModelV1{}

// SeriesLockModelV1 struct for SeriesLockModelV1
type SeriesLockModelV1 struct {
	Field      *string `json:"field,omitempty"`
	Reason     *string `json:"reason,omitempty"`
	UserId     *int64  `json:"user_id,omitempty"`
	Username   *string `json:"username,omitempty"`
	TimeLocked *TimeV1 `json:"time_locked,omitempty"`
}

// NewSeriesLockModelV1 instantiates a new SeriesLockModelV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesLockModelV1() *SeriesLockModelV1 {
	this := SeriesLockModelV1{}
	return &this
}

// NewSeriesLockModelV1WithDefaults instantiates a new SeriesLockModelV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesLockModelV1WithDefaults() *SeriesLockModelV1 {
	this := SeriesLockModelV1{}
	return &this
}

// GetField returns the Field field value if set, zero value otherwise.
func (o *SeriesLockModelV1) GetField() string {
	if o == nil || IsNil(o.Field) {
		var ret string
		return ret
	}
	return *o.Field
}

// GetFieldOk returns a tuple with the Field field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesLockModelV1) GetFieldOk() (*string, bool) {
	if o == nil || IsNil(o.Field) {
		return nil, false
	}
	return o.Field, true
}

// HasField returns a boolean if a field has been set.
func (o *SeriesLockModelV1) HasField() bool {
	if o != nil && !IsNil(o.Field) {
		return true
	}

	return false
}

// SetField gets a reference to the given string and assigns it to the Field field.
func (o *SeriesLockModelV1) SetField(v string) {
	o.Field = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *SeriesLockModelV1) GetReason() string {
	if o == nil || IsNil(o.Reason) {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesLockModelV1) GetReasonOk() (*string, bool) {
	if o == nil || IsNil(o.Reason) {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *SeriesLockModelV1) HasReason() bool {
	if o != nil && !IsNil(o.Reason) {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *SeriesLockModelV1) SetReason(v string) {
	o.Reason = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *SeriesLockModelV1) GetUserId() int64 {
	if o == nil || IsNil(o.UserId) {
		var ret int64
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesLockModelV1) GetUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *SeriesLockModelV1) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given int64 and assigns it to the UserId field.
func (o *SeriesLockModelV1) SetUserId(v int64) {
	o.UserId = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *SeriesLockModelV1) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesLockModelV1) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *SeriesLockModelV1) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *SeriesLockModelV1) SetUsername(v string) {
	o.Username = &v
}

// GetTimeLocked returns the TimeLocked field value if set, zero value otherwise.
func (o *SeriesLockModelV1) GetTimeLocked() TimeV1 {
	if o == nil || IsNil(o.TimeLocked) {
		var ret TimeV1
		return ret
	}
	return *o.TimeLocked
}

// GetTimeLockedOk returns a tuple with the TimeLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesLockModelV1) GetTimeLockedOk() (*TimeV1, bool) {
	if o == nil || IsNil(o.TimeLocked) {
		return nil, false
	}
	return o.TimeLocked, true
}

// HasTimeLocked returns a boolean if a field has been set.
func (o *SeriesLockModelV1) HasTimeLocked() bool {
	if o != nil && !IsNil(o.TimeLocked) {
		return true
	}

	return false
}

// SetTimeLocked gets a reference to the given TimeV1 and assigns it to the TimeLocked field.
func (o *SeriesLockModelV1) SetTimeLocked(v TimeV1) {
	o.TimeLocked = &v
}

func (o SeriesLockModelV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeriesLockModelV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Field) {
		toSerialize["field"] = o.Field
	}
	if !IsNil(o.Reason) {
		toSerialize["reason"] = o.Reason
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.TimeLocked) {
		toSerialize["time_locked"] = o.TimeLocked
	}
	return toSerialize, nil
}

type NullableSeriesLockModelV1 struct {
	value *SeriesLockModelV1
	isSet bool
}

func (v NullableSeriesLockModelV1) Get() *SeriesLockModelV1 {
	return v.value
}

func (v *NullableSeriesLockModelV1) Set(val *SeriesLockModelV1) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesLockModelV1) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesLockModelV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesLockModelV1(val *SeriesLockModelV1) *NullableSeriesLockModelV1 {
	return &NullableSeriesLockModelV1{value: val, isSet: true}
}

func (v NullableSeriesLockModelV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesLockModelV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
