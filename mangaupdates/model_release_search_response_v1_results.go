/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ReleaseSearchResponseV1Results type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReleaseSearchResponseV1Results{}

// ReleaseSearchResponseV1Results struct for ReleaseSearchResponseV1Results
type ReleaseSearchResponseV1Results struct {
	Record *ReleaseModelSearchV1 `json:"record,omitempty"`
	Metadata *ReleaseSearchResponseV1ResultsMetadata `json:"metadata,omitempty"`
}

// NewReleaseSearchResponseV1Results instantiates a new ReleaseSearchResponseV1Results object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReleaseSearchResponseV1Results() *ReleaseSearchResponseV1Results {
	this := ReleaseSearchResponseV1Results{}
	return &this
}

// NewReleaseSearchResponseV1ResultsWithDefaults instantiates a new ReleaseSearchResponseV1Results object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReleaseSearchResponseV1ResultsWithDefaults() *ReleaseSearchResponseV1Results {
	this := ReleaseSearchResponseV1Results{}
	return &this
}

// GetRecord returns the Record field value if set, zero value otherwise.
func (o *ReleaseSearchResponseV1Results) GetRecord() ReleaseModelSearchV1 {
	if o == nil || IsNil(o.Record) {
		var ret ReleaseModelSearchV1
		return ret
	}
	return *o.Record
}

// GetRecordOk returns a tuple with the Record field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseSearchResponseV1Results) GetRecordOk() (*ReleaseModelSearchV1, bool) {
	if o == nil || IsNil(o.Record) {
		return nil, false
	}
	return o.Record, true
}

// HasRecord returns a boolean if a field has been set.
func (o *ReleaseSearchResponseV1Results) HasRecord() bool {
	if o != nil && !IsNil(o.Record) {
		return true
	}

	return false
}

// SetRecord gets a reference to the given ReleaseModelSearchV1 and assigns it to the Record field.
func (o *ReleaseSearchResponseV1Results) SetRecord(v ReleaseModelSearchV1) {
	o.Record = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ReleaseSearchResponseV1Results) GetMetadata() ReleaseSearchResponseV1ResultsMetadata {
	if o == nil || IsNil(o.Metadata) {
		var ret ReleaseSearchResponseV1ResultsMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReleaseSearchResponseV1Results) GetMetadataOk() (*ReleaseSearchResponseV1ResultsMetadata, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ReleaseSearchResponseV1Results) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ReleaseSearchResponseV1ResultsMetadata and assigns it to the Metadata field.
func (o *ReleaseSearchResponseV1Results) SetMetadata(v ReleaseSearchResponseV1ResultsMetadata) {
	o.Metadata = &v
}

func (o ReleaseSearchResponseV1Results) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReleaseSearchResponseV1Results) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Record) {
		toSerialize["record"] = o.Record
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableReleaseSearchResponseV1Results struct {
	value *ReleaseSearchResponseV1Results
	isSet bool
}

func (v NullableReleaseSearchResponseV1Results) Get() *ReleaseSearchResponseV1Results {
	return v.value
}

func (v *NullableReleaseSearchResponseV1Results) Set(val *ReleaseSearchResponseV1Results) {
	v.value = val
	v.isSet = true
}

func (v NullableReleaseSearchResponseV1Results) IsSet() bool {
	return v.isSet
}

func (v *NullableReleaseSearchResponseV1Results) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReleaseSearchResponseV1Results(val *ReleaseSearchResponseV1Results) *NullableReleaseSearchResponseV1Results {
	return &NullableReleaseSearchResponseV1Results{value: val, isSet: true}
}

func (v NullableReleaseSearchResponseV1Results) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReleaseSearchResponseV1Results) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


