/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SeriesCategoryVoteModelV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeriesCategoryVoteModelV1{}

// SeriesCategoryVoteModelV1 struct for SeriesCategoryVoteModelV1
type SeriesCategoryVoteModelV1 struct {
	Category *string `json:"category,omitempty"`
	Agree *bool `json:"agree,omitempty"`
}

// NewSeriesCategoryVoteModelV1 instantiates a new SeriesCategoryVoteModelV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesCategoryVoteModelV1() *SeriesCategoryVoteModelV1 {
	this := SeriesCategoryVoteModelV1{}
	return &this
}

// NewSeriesCategoryVoteModelV1WithDefaults instantiates a new SeriesCategoryVoteModelV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesCategoryVoteModelV1WithDefaults() *SeriesCategoryVoteModelV1 {
	this := SeriesCategoryVoteModelV1{}
	return &this
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *SeriesCategoryVoteModelV1) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesCategoryVoteModelV1) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *SeriesCategoryVoteModelV1) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *SeriesCategoryVoteModelV1) SetCategory(v string) {
	o.Category = &v
}

// GetAgree returns the Agree field value if set, zero value otherwise.
func (o *SeriesCategoryVoteModelV1) GetAgree() bool {
	if o == nil || IsNil(o.Agree) {
		var ret bool
		return ret
	}
	return *o.Agree
}

// GetAgreeOk returns a tuple with the Agree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesCategoryVoteModelV1) GetAgreeOk() (*bool, bool) {
	if o == nil || IsNil(o.Agree) {
		return nil, false
	}
	return o.Agree, true
}

// HasAgree returns a boolean if a field has been set.
func (o *SeriesCategoryVoteModelV1) HasAgree() bool {
	if o != nil && !IsNil(o.Agree) {
		return true
	}

	return false
}

// SetAgree gets a reference to the given bool and assigns it to the Agree field.
func (o *SeriesCategoryVoteModelV1) SetAgree(v bool) {
	o.Agree = &v
}

func (o SeriesCategoryVoteModelV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeriesCategoryVoteModelV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if !IsNil(o.Agree) {
		toSerialize["agree"] = o.Agree
	}
	return toSerialize, nil
}

type NullableSeriesCategoryVoteModelV1 struct {
	value *SeriesCategoryVoteModelV1
	isSet bool
}

func (v NullableSeriesCategoryVoteModelV1) Get() *SeriesCategoryVoteModelV1 {
	return v.value
}

func (v *NullableSeriesCategoryVoteModelV1) Set(val *SeriesCategoryVoteModelV1) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesCategoryVoteModelV1) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesCategoryVoteModelV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesCategoryVoteModelV1(val *SeriesCategoryVoteModelV1) *NullableSeriesCategoryVoteModelV1 {
	return &NullableSeriesCategoryVoteModelV1{value: val, isSet: true}
}

func (v NullableSeriesCategoryVoteModelV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesCategoryVoteModelV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


