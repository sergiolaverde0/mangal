/*
MangaUpdates API

Testing AboutusAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/belphemur/mangal/mangaupdates"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_AboutusAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AboutusAPIService AddAboutusCategory", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AboutusAPI.AddAboutusCategory(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AboutusAPIService AddAboutusCategoryUser", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var categoryId int64

		resp, httpRes, err := apiClient.AboutusAPI.AddAboutusCategoryUser(context.Background(), categoryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AboutusAPIService DeleteAboutusCategory", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var categoryId int64

		resp, httpRes, err := apiClient.AboutusAPI.DeleteAboutusCategory(context.Background(), categoryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AboutusAPIService DeleteAboutusCategoryUser", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var categoryId int64
		var entryId int64

		resp, httpRes, err := apiClient.AboutusAPI.DeleteAboutusCategoryUser(context.Background(), categoryId, entryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AboutusAPIService ReorderAboutus", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AboutusAPI.ReorderAboutus(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AboutusAPIService RetrieveAboutusCategoriesAndUsers", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AboutusAPI.RetrieveAboutusCategoriesAndUsers(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AboutusAPIService RetrieveAboutusCategory", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var categoryId int64

		resp, httpRes, err := apiClient.AboutusAPI.RetrieveAboutusCategory(context.Background(), categoryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AboutusAPIService RetrieveAboutusDescription", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AboutusAPI.RetrieveAboutusDescription(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AboutusAPIService UpdateAboutusCategory", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var categoryId int64

		resp, httpRes, err := apiClient.AboutusAPI.UpdateAboutusCategory(context.Background(), categoryId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AboutusAPIService UpdateAboutusDescription", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.AboutusAPI.UpdateAboutusDescription(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
