/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GenreModelUpdateV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenreModelUpdateV1{}

// GenreModelUpdateV1 struct for GenreModelUpdateV1
type GenreModelUpdateV1 struct {
	Genre *string `json:"genre,omitempty"`
	Description *string `json:"description,omitempty"`
	Demographic *bool `json:"demographic,omitempty"`
}

// NewGenreModelUpdateV1 instantiates a new GenreModelUpdateV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenreModelUpdateV1() *GenreModelUpdateV1 {
	this := GenreModelUpdateV1{}
	return &this
}

// NewGenreModelUpdateV1WithDefaults instantiates a new GenreModelUpdateV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenreModelUpdateV1WithDefaults() *GenreModelUpdateV1 {
	this := GenreModelUpdateV1{}
	return &this
}

// GetGenre returns the Genre field value if set, zero value otherwise.
func (o *GenreModelUpdateV1) GetGenre() string {
	if o == nil || IsNil(o.Genre) {
		var ret string
		return ret
	}
	return *o.Genre
}

// GetGenreOk returns a tuple with the Genre field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenreModelUpdateV1) GetGenreOk() (*string, bool) {
	if o == nil || IsNil(o.Genre) {
		return nil, false
	}
	return o.Genre, true
}

// HasGenre returns a boolean if a field has been set.
func (o *GenreModelUpdateV1) HasGenre() bool {
	if o != nil && !IsNil(o.Genre) {
		return true
	}

	return false
}

// SetGenre gets a reference to the given string and assigns it to the Genre field.
func (o *GenreModelUpdateV1) SetGenre(v string) {
	o.Genre = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GenreModelUpdateV1) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenreModelUpdateV1) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GenreModelUpdateV1) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GenreModelUpdateV1) SetDescription(v string) {
	o.Description = &v
}

// GetDemographic returns the Demographic field value if set, zero value otherwise.
func (o *GenreModelUpdateV1) GetDemographic() bool {
	if o == nil || IsNil(o.Demographic) {
		var ret bool
		return ret
	}
	return *o.Demographic
}

// GetDemographicOk returns a tuple with the Demographic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenreModelUpdateV1) GetDemographicOk() (*bool, bool) {
	if o == nil || IsNil(o.Demographic) {
		return nil, false
	}
	return o.Demographic, true
}

// HasDemographic returns a boolean if a field has been set.
func (o *GenreModelUpdateV1) HasDemographic() bool {
	if o != nil && !IsNil(o.Demographic) {
		return true
	}

	return false
}

// SetDemographic gets a reference to the given bool and assigns it to the Demographic field.
func (o *GenreModelUpdateV1) SetDemographic(v bool) {
	o.Demographic = &v
}

func (o GenreModelUpdateV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenreModelUpdateV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Genre) {
		toSerialize["genre"] = o.Genre
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Demographic) {
		toSerialize["demographic"] = o.Demographic
	}
	return toSerialize, nil
}

type NullableGenreModelUpdateV1 struct {
	value *GenreModelUpdateV1
	isSet bool
}

func (v NullableGenreModelUpdateV1) Get() *GenreModelUpdateV1 {
	return v.value
}

func (v *NullableGenreModelUpdateV1) Set(val *GenreModelUpdateV1) {
	v.value = val
	v.isSet = true
}

func (v NullableGenreModelUpdateV1) IsSet() bool {
	return v.isSet
}

func (v *NullableGenreModelUpdateV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenreModelUpdateV1(val *GenreModelUpdateV1) *NullableGenreModelUpdateV1 {
	return &NullableGenreModelUpdateV1{value: val, isSet: true}
}

func (v NullableGenreModelUpdateV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenreModelUpdateV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


