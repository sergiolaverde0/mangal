/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ForumPollAnswerModelUpdateV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ForumPollAnswerModelUpdateV1{}

// ForumPollAnswerModelUpdateV1 struct for ForumPollAnswerModelUpdateV1
type ForumPollAnswerModelUpdateV1 struct {
	AnswerId    int64  `json:"answer_id"`
	Answer      string `json:"answer"`
	TempImageId *int64 `json:"temp_image_id,omitempty"`
}

// NewForumPollAnswerModelUpdateV1 instantiates a new ForumPollAnswerModelUpdateV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForumPollAnswerModelUpdateV1(answerId int64, answer string) *ForumPollAnswerModelUpdateV1 {
	this := ForumPollAnswerModelUpdateV1{}
	this.AnswerId = answerId
	this.Answer = answer
	return &this
}

// NewForumPollAnswerModelUpdateV1WithDefaults instantiates a new ForumPollAnswerModelUpdateV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForumPollAnswerModelUpdateV1WithDefaults() *ForumPollAnswerModelUpdateV1 {
	this := ForumPollAnswerModelUpdateV1{}
	return &this
}

// GetAnswerId returns the AnswerId field value
func (o *ForumPollAnswerModelUpdateV1) GetAnswerId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AnswerId
}

// GetAnswerIdOk returns a tuple with the AnswerId field value
// and a boolean to check if the value has been set.
func (o *ForumPollAnswerModelUpdateV1) GetAnswerIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnswerId, true
}

// SetAnswerId sets field value
func (o *ForumPollAnswerModelUpdateV1) SetAnswerId(v int64) {
	o.AnswerId = v
}

// GetAnswer returns the Answer field value
func (o *ForumPollAnswerModelUpdateV1) GetAnswer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Answer
}

// GetAnswerOk returns a tuple with the Answer field value
// and a boolean to check if the value has been set.
func (o *ForumPollAnswerModelUpdateV1) GetAnswerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Answer, true
}

// SetAnswer sets field value
func (o *ForumPollAnswerModelUpdateV1) SetAnswer(v string) {
	o.Answer = v
}

// GetTempImageId returns the TempImageId field value if set, zero value otherwise.
func (o *ForumPollAnswerModelUpdateV1) GetTempImageId() int64 {
	if o == nil || IsNil(o.TempImageId) {
		var ret int64
		return ret
	}
	return *o.TempImageId
}

// GetTempImageIdOk returns a tuple with the TempImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForumPollAnswerModelUpdateV1) GetTempImageIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TempImageId) {
		return nil, false
	}
	return o.TempImageId, true
}

// HasTempImageId returns a boolean if a field has been set.
func (o *ForumPollAnswerModelUpdateV1) HasTempImageId() bool {
	if o != nil && !IsNil(o.TempImageId) {
		return true
	}

	return false
}

// SetTempImageId gets a reference to the given int64 and assigns it to the TempImageId field.
func (o *ForumPollAnswerModelUpdateV1) SetTempImageId(v int64) {
	o.TempImageId = &v
}

func (o ForumPollAnswerModelUpdateV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ForumPollAnswerModelUpdateV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["answer_id"] = o.AnswerId
	toSerialize["answer"] = o.Answer
	if !IsNil(o.TempImageId) {
		toSerialize["temp_image_id"] = o.TempImageId
	}
	return toSerialize, nil
}

type NullableForumPollAnswerModelUpdateV1 struct {
	value *ForumPollAnswerModelUpdateV1
	isSet bool
}

func (v NullableForumPollAnswerModelUpdateV1) Get() *ForumPollAnswerModelUpdateV1 {
	return v.value
}

func (v *NullableForumPollAnswerModelUpdateV1) Set(val *ForumPollAnswerModelUpdateV1) {
	v.value = val
	v.isSet = true
}

func (v NullableForumPollAnswerModelUpdateV1) IsSet() bool {
	return v.isSet
}

func (v *NullableForumPollAnswerModelUpdateV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForumPollAnswerModelUpdateV1(val *ForumPollAnswerModelUpdateV1) *NullableForumPollAnswerModelUpdateV1 {
	return &NullableForumPollAnswerModelUpdateV1{value: val, isSet: true}
}

func (v NullableForumPollAnswerModelUpdateV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForumPollAnswerModelUpdateV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
