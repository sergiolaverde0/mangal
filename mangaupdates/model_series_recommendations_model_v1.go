/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SeriesRecommendationsModelV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeriesRecommendationsModelV1{}

// SeriesRecommendationsModelV1 struct for SeriesRecommendationsModelV1
type SeriesRecommendationsModelV1 struct {
	SeriesName *string `json:"series_name,omitempty"`
	SeriesId   *int64  `json:"series_id,omitempty"`
	Weight     *int64  `json:"weight,omitempty"`
}

// NewSeriesRecommendationsModelV1 instantiates a new SeriesRecommendationsModelV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesRecommendationsModelV1() *SeriesRecommendationsModelV1 {
	this := SeriesRecommendationsModelV1{}
	return &this
}

// NewSeriesRecommendationsModelV1WithDefaults instantiates a new SeriesRecommendationsModelV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesRecommendationsModelV1WithDefaults() *SeriesRecommendationsModelV1 {
	this := SeriesRecommendationsModelV1{}
	return &this
}

// GetSeriesName returns the SeriesName field value if set, zero value otherwise.
func (o *SeriesRecommendationsModelV1) GetSeriesName() string {
	if o == nil || IsNil(o.SeriesName) {
		var ret string
		return ret
	}
	return *o.SeriesName
}

// GetSeriesNameOk returns a tuple with the SeriesName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesRecommendationsModelV1) GetSeriesNameOk() (*string, bool) {
	if o == nil || IsNil(o.SeriesName) {
		return nil, false
	}
	return o.SeriesName, true
}

// HasSeriesName returns a boolean if a field has been set.
func (o *SeriesRecommendationsModelV1) HasSeriesName() bool {
	if o != nil && !IsNil(o.SeriesName) {
		return true
	}

	return false
}

// SetSeriesName gets a reference to the given string and assigns it to the SeriesName field.
func (o *SeriesRecommendationsModelV1) SetSeriesName(v string) {
	o.SeriesName = &v
}

// GetSeriesId returns the SeriesId field value if set, zero value otherwise.
func (o *SeriesRecommendationsModelV1) GetSeriesId() int64 {
	if o == nil || IsNil(o.SeriesId) {
		var ret int64
		return ret
	}
	return *o.SeriesId
}

// GetSeriesIdOk returns a tuple with the SeriesId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesRecommendationsModelV1) GetSeriesIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SeriesId) {
		return nil, false
	}
	return o.SeriesId, true
}

// HasSeriesId returns a boolean if a field has been set.
func (o *SeriesRecommendationsModelV1) HasSeriesId() bool {
	if o != nil && !IsNil(o.SeriesId) {
		return true
	}

	return false
}

// SetSeriesId gets a reference to the given int64 and assigns it to the SeriesId field.
func (o *SeriesRecommendationsModelV1) SetSeriesId(v int64) {
	o.SeriesId = &v
}

// GetWeight returns the Weight field value if set, zero value otherwise.
func (o *SeriesRecommendationsModelV1) GetWeight() int64 {
	if o == nil || IsNil(o.Weight) {
		var ret int64
		return ret
	}
	return *o.Weight
}

// GetWeightOk returns a tuple with the Weight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesRecommendationsModelV1) GetWeightOk() (*int64, bool) {
	if o == nil || IsNil(o.Weight) {
		return nil, false
	}
	return o.Weight, true
}

// HasWeight returns a boolean if a field has been set.
func (o *SeriesRecommendationsModelV1) HasWeight() bool {
	if o != nil && !IsNil(o.Weight) {
		return true
	}

	return false
}

// SetWeight gets a reference to the given int64 and assigns it to the Weight field.
func (o *SeriesRecommendationsModelV1) SetWeight(v int64) {
	o.Weight = &v
}

func (o SeriesRecommendationsModelV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeriesRecommendationsModelV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SeriesName) {
		toSerialize["series_name"] = o.SeriesName
	}
	if !IsNil(o.SeriesId) {
		toSerialize["series_id"] = o.SeriesId
	}
	if !IsNil(o.Weight) {
		toSerialize["weight"] = o.Weight
	}
	return toSerialize, nil
}

type NullableSeriesRecommendationsModelV1 struct {
	value *SeriesRecommendationsModelV1
	isSet bool
}

func (v NullableSeriesRecommendationsModelV1) Get() *SeriesRecommendationsModelV1 {
	return v.value
}

func (v *NullableSeriesRecommendationsModelV1) Set(val *SeriesRecommendationsModelV1) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesRecommendationsModelV1) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesRecommendationsModelV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesRecommendationsModelV1(val *SeriesRecommendationsModelV1) *NullableSeriesRecommendationsModelV1 {
	return &NullableSeriesRecommendationsModelV1{value: val, isSet: true}
}

func (v NullableSeriesRecommendationsModelV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesRecommendationsModelV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
