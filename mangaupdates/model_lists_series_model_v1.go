/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListsSeriesModelV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListsSeriesModelV1{}

// ListsSeriesModelV1 struct for ListsSeriesModelV1
type ListsSeriesModelV1 struct {
	Series    ListsSeriesModelV1Series  `json:"series"`
	ListId    *int64                    `json:"list_id,omitempty"`
	ListType  *string                   `json:"list_type,omitempty"`
	ListIcon  *string                   `json:"list_icon,omitempty"`
	Status    *ListsSeriesModelV1Status `json:"status,omitempty"`
	Priority  *int64                    `json:"priority,omitempty"`
	TimeAdded *TimeV1                   `json:"time_added,omitempty"`
}

// NewListsSeriesModelV1 instantiates a new ListsSeriesModelV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListsSeriesModelV1(series ListsSeriesModelV1Series) *ListsSeriesModelV1 {
	this := ListsSeriesModelV1{}
	this.Series = series
	return &this
}

// NewListsSeriesModelV1WithDefaults instantiates a new ListsSeriesModelV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListsSeriesModelV1WithDefaults() *ListsSeriesModelV1 {
	this := ListsSeriesModelV1{}
	return &this
}

// GetSeries returns the Series field value
func (o *ListsSeriesModelV1) GetSeries() ListsSeriesModelV1Series {
	if o == nil {
		var ret ListsSeriesModelV1Series
		return ret
	}

	return o.Series
}

// GetSeriesOk returns a tuple with the Series field value
// and a boolean to check if the value has been set.
func (o *ListsSeriesModelV1) GetSeriesOk() (*ListsSeriesModelV1Series, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Series, true
}

// SetSeries sets field value
func (o *ListsSeriesModelV1) SetSeries(v ListsSeriesModelV1Series) {
	o.Series = v
}

// GetListId returns the ListId field value if set, zero value otherwise.
func (o *ListsSeriesModelV1) GetListId() int64 {
	if o == nil || IsNil(o.ListId) {
		var ret int64
		return ret
	}
	return *o.ListId
}

// GetListIdOk returns a tuple with the ListId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsSeriesModelV1) GetListIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ListId) {
		return nil, false
	}
	return o.ListId, true
}

// HasListId returns a boolean if a field has been set.
func (o *ListsSeriesModelV1) HasListId() bool {
	if o != nil && !IsNil(o.ListId) {
		return true
	}

	return false
}

// SetListId gets a reference to the given int64 and assigns it to the ListId field.
func (o *ListsSeriesModelV1) SetListId(v int64) {
	o.ListId = &v
}

// GetListType returns the ListType field value if set, zero value otherwise.
func (o *ListsSeriesModelV1) GetListType() string {
	if o == nil || IsNil(o.ListType) {
		var ret string
		return ret
	}
	return *o.ListType
}

// GetListTypeOk returns a tuple with the ListType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsSeriesModelV1) GetListTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ListType) {
		return nil, false
	}
	return o.ListType, true
}

// HasListType returns a boolean if a field has been set.
func (o *ListsSeriesModelV1) HasListType() bool {
	if o != nil && !IsNil(o.ListType) {
		return true
	}

	return false
}

// SetListType gets a reference to the given string and assigns it to the ListType field.
func (o *ListsSeriesModelV1) SetListType(v string) {
	o.ListType = &v
}

// GetListIcon returns the ListIcon field value if set, zero value otherwise.
func (o *ListsSeriesModelV1) GetListIcon() string {
	if o == nil || IsNil(o.ListIcon) {
		var ret string
		return ret
	}
	return *o.ListIcon
}

// GetListIconOk returns a tuple with the ListIcon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsSeriesModelV1) GetListIconOk() (*string, bool) {
	if o == nil || IsNil(o.ListIcon) {
		return nil, false
	}
	return o.ListIcon, true
}

// HasListIcon returns a boolean if a field has been set.
func (o *ListsSeriesModelV1) HasListIcon() bool {
	if o != nil && !IsNil(o.ListIcon) {
		return true
	}

	return false
}

// SetListIcon gets a reference to the given string and assigns it to the ListIcon field.
func (o *ListsSeriesModelV1) SetListIcon(v string) {
	o.ListIcon = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ListsSeriesModelV1) GetStatus() ListsSeriesModelV1Status {
	if o == nil || IsNil(o.Status) {
		var ret ListsSeriesModelV1Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsSeriesModelV1) GetStatusOk() (*ListsSeriesModelV1Status, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ListsSeriesModelV1) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ListsSeriesModelV1Status and assigns it to the Status field.
func (o *ListsSeriesModelV1) SetStatus(v ListsSeriesModelV1Status) {
	o.Status = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ListsSeriesModelV1) GetPriority() int64 {
	if o == nil || IsNil(o.Priority) {
		var ret int64
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsSeriesModelV1) GetPriorityOk() (*int64, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ListsSeriesModelV1) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int64 and assigns it to the Priority field.
func (o *ListsSeriesModelV1) SetPriority(v int64) {
	o.Priority = &v
}

// GetTimeAdded returns the TimeAdded field value if set, zero value otherwise.
func (o *ListsSeriesModelV1) GetTimeAdded() TimeV1 {
	if o == nil || IsNil(o.TimeAdded) {
		var ret TimeV1
		return ret
	}
	return *o.TimeAdded
}

// GetTimeAddedOk returns a tuple with the TimeAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsSeriesModelV1) GetTimeAddedOk() (*TimeV1, bool) {
	if o == nil || IsNil(o.TimeAdded) {
		return nil, false
	}
	return o.TimeAdded, true
}

// HasTimeAdded returns a boolean if a field has been set.
func (o *ListsSeriesModelV1) HasTimeAdded() bool {
	if o != nil && !IsNil(o.TimeAdded) {
		return true
	}

	return false
}

// SetTimeAdded gets a reference to the given TimeV1 and assigns it to the TimeAdded field.
func (o *ListsSeriesModelV1) SetTimeAdded(v TimeV1) {
	o.TimeAdded = &v
}

func (o ListsSeriesModelV1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListsSeriesModelV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["series"] = o.Series
	if !IsNil(o.ListId) {
		toSerialize["list_id"] = o.ListId
	}
	if !IsNil(o.ListType) {
		toSerialize["list_type"] = o.ListType
	}
	if !IsNil(o.ListIcon) {
		toSerialize["list_icon"] = o.ListIcon
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.TimeAdded) {
		toSerialize["time_added"] = o.TimeAdded
	}
	return toSerialize, nil
}

type NullableListsSeriesModelV1 struct {
	value *ListsSeriesModelV1
	isSet bool
}

func (v NullableListsSeriesModelV1) Get() *ListsSeriesModelV1 {
	return v.value
}

func (v *NullableListsSeriesModelV1) Set(val *ListsSeriesModelV1) {
	v.value = val
	v.isSet = true
}

func (v NullableListsSeriesModelV1) IsSet() bool {
	return v.isSet
}

func (v *NullableListsSeriesModelV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListsSeriesModelV1(val *ListsSeriesModelV1) *NullableListsSeriesModelV1 {
	return &NullableListsSeriesModelV1{value: val, isSet: true}
}

func (v NullableListsSeriesModelV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListsSeriesModelV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
