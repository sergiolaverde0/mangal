/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ForumSearchResponseV1PostResultsMetadataTopicStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ForumSearchResponseV1PostResultsMetadataTopicStats{}

// ForumSearchResponseV1PostResultsMetadataTopicStats struct for ForumSearchResponseV1PostResultsMetadataTopicStats
type ForumSearchResponseV1PostResultsMetadataTopicStats struct {
	Posts *int64 `json:"posts,omitempty"`
	Views *int64 `json:"views,omitempty"`
}

// NewForumSearchResponseV1PostResultsMetadataTopicStats instantiates a new ForumSearchResponseV1PostResultsMetadataTopicStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewForumSearchResponseV1PostResultsMetadataTopicStats() *ForumSearchResponseV1PostResultsMetadataTopicStats {
	this := ForumSearchResponseV1PostResultsMetadataTopicStats{}
	return &this
}

// NewForumSearchResponseV1PostResultsMetadataTopicStatsWithDefaults instantiates a new ForumSearchResponseV1PostResultsMetadataTopicStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewForumSearchResponseV1PostResultsMetadataTopicStatsWithDefaults() *ForumSearchResponseV1PostResultsMetadataTopicStats {
	this := ForumSearchResponseV1PostResultsMetadataTopicStats{}
	return &this
}

// GetPosts returns the Posts field value if set, zero value otherwise.
func (o *ForumSearchResponseV1PostResultsMetadataTopicStats) GetPosts() int64 {
	if o == nil || IsNil(o.Posts) {
		var ret int64
		return ret
	}
	return *o.Posts
}

// GetPostsOk returns a tuple with the Posts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForumSearchResponseV1PostResultsMetadataTopicStats) GetPostsOk() (*int64, bool) {
	if o == nil || IsNil(o.Posts) {
		return nil, false
	}
	return o.Posts, true
}

// HasPosts returns a boolean if a field has been set.
func (o *ForumSearchResponseV1PostResultsMetadataTopicStats) HasPosts() bool {
	if o != nil && !IsNil(o.Posts) {
		return true
	}

	return false
}

// SetPosts gets a reference to the given int64 and assigns it to the Posts field.
func (o *ForumSearchResponseV1PostResultsMetadataTopicStats) SetPosts(v int64) {
	o.Posts = &v
}

// GetViews returns the Views field value if set, zero value otherwise.
func (o *ForumSearchResponseV1PostResultsMetadataTopicStats) GetViews() int64 {
	if o == nil || IsNil(o.Views) {
		var ret int64
		return ret
	}
	return *o.Views
}

// GetViewsOk returns a tuple with the Views field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ForumSearchResponseV1PostResultsMetadataTopicStats) GetViewsOk() (*int64, bool) {
	if o == nil || IsNil(o.Views) {
		return nil, false
	}
	return o.Views, true
}

// HasViews returns a boolean if a field has been set.
func (o *ForumSearchResponseV1PostResultsMetadataTopicStats) HasViews() bool {
	if o != nil && !IsNil(o.Views) {
		return true
	}

	return false
}

// SetViews gets a reference to the given int64 and assigns it to the Views field.
func (o *ForumSearchResponseV1PostResultsMetadataTopicStats) SetViews(v int64) {
	o.Views = &v
}

func (o ForumSearchResponseV1PostResultsMetadataTopicStats) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ForumSearchResponseV1PostResultsMetadataTopicStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Posts) {
		toSerialize["posts"] = o.Posts
	}
	if !IsNil(o.Views) {
		toSerialize["views"] = o.Views
	}
	return toSerialize, nil
}

type NullableForumSearchResponseV1PostResultsMetadataTopicStats struct {
	value *ForumSearchResponseV1PostResultsMetadataTopicStats
	isSet bool
}

func (v NullableForumSearchResponseV1PostResultsMetadataTopicStats) Get() *ForumSearchResponseV1PostResultsMetadataTopicStats {
	return v.value
}

func (v *NullableForumSearchResponseV1PostResultsMetadataTopicStats) Set(val *ForumSearchResponseV1PostResultsMetadataTopicStats) {
	v.value = val
	v.isSet = true
}

func (v NullableForumSearchResponseV1PostResultsMetadataTopicStats) IsSet() bool {
	return v.isSet
}

func (v *NullableForumSearchResponseV1PostResultsMetadataTopicStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableForumSearchResponseV1PostResultsMetadataTopicStats(val *ForumSearchResponseV1PostResultsMetadataTopicStats) *NullableForumSearchResponseV1PostResultsMetadataTopicStats {
	return &NullableForumSearchResponseV1PostResultsMetadataTopicStats{value: val, isSet: true}
}

func (v NullableForumSearchResponseV1PostResultsMetadataTopicStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableForumSearchResponseV1PostResultsMetadataTopicStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
