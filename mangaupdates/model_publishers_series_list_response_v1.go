/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PublishersSeriesListResponseV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublishersSeriesListResponseV1{}

// PublishersSeriesListResponseV1 struct for PublishersSeriesListResponseV1
type PublishersSeriesListResponseV1 struct {
	SeriesList []PublishersSeriesListResponseV1SeriesList `json:"series_list,omitempty"`
	PublicationList []PublishersSeriesListResponseV1PublicationList `json:"publication_list,omitempty"`
}

// NewPublishersSeriesListResponseV1 instantiates a new PublishersSeriesListResponseV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublishersSeriesListResponseV1() *PublishersSeriesListResponseV1 {
	this := PublishersSeriesListResponseV1{}
	return &this
}

// NewPublishersSeriesListResponseV1WithDefaults instantiates a new PublishersSeriesListResponseV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublishersSeriesListResponseV1WithDefaults() *PublishersSeriesListResponseV1 {
	this := PublishersSeriesListResponseV1{}
	return &this
}

// GetSeriesList returns the SeriesList field value if set, zero value otherwise.
func (o *PublishersSeriesListResponseV1) GetSeriesList() []PublishersSeriesListResponseV1SeriesList {
	if o == nil || IsNil(o.SeriesList) {
		var ret []PublishersSeriesListResponseV1SeriesList
		return ret
	}
	return o.SeriesList
}

// GetSeriesListOk returns a tuple with the SeriesList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishersSeriesListResponseV1) GetSeriesListOk() ([]PublishersSeriesListResponseV1SeriesList, bool) {
	if o == nil || IsNil(o.SeriesList) {
		return nil, false
	}
	return o.SeriesList, true
}

// HasSeriesList returns a boolean if a field has been set.
func (o *PublishersSeriesListResponseV1) HasSeriesList() bool {
	if o != nil && !IsNil(o.SeriesList) {
		return true
	}

	return false
}

// SetSeriesList gets a reference to the given []PublishersSeriesListResponseV1SeriesList and assigns it to the SeriesList field.
func (o *PublishersSeriesListResponseV1) SetSeriesList(v []PublishersSeriesListResponseV1SeriesList) {
	o.SeriesList = v
}

// GetPublicationList returns the PublicationList field value if set, zero value otherwise.
func (o *PublishersSeriesListResponseV1) GetPublicationList() []PublishersSeriesListResponseV1PublicationList {
	if o == nil || IsNil(o.PublicationList) {
		var ret []PublishersSeriesListResponseV1PublicationList
		return ret
	}
	return o.PublicationList
}

// GetPublicationListOk returns a tuple with the PublicationList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublishersSeriesListResponseV1) GetPublicationListOk() ([]PublishersSeriesListResponseV1PublicationList, bool) {
	if o == nil || IsNil(o.PublicationList) {
		return nil, false
	}
	return o.PublicationList, true
}

// HasPublicationList returns a boolean if a field has been set.
func (o *PublishersSeriesListResponseV1) HasPublicationList() bool {
	if o != nil && !IsNil(o.PublicationList) {
		return true
	}

	return false
}

// SetPublicationList gets a reference to the given []PublishersSeriesListResponseV1PublicationList and assigns it to the PublicationList field.
func (o *PublishersSeriesListResponseV1) SetPublicationList(v []PublishersSeriesListResponseV1PublicationList) {
	o.PublicationList = v
}

func (o PublishersSeriesListResponseV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublishersSeriesListResponseV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SeriesList) {
		toSerialize["series_list"] = o.SeriesList
	}
	if !IsNil(o.PublicationList) {
		toSerialize["publication_list"] = o.PublicationList
	}
	return toSerialize, nil
}

type NullablePublishersSeriesListResponseV1 struct {
	value *PublishersSeriesListResponseV1
	isSet bool
}

func (v NullablePublishersSeriesListResponseV1) Get() *PublishersSeriesListResponseV1 {
	return v.value
}

func (v *NullablePublishersSeriesListResponseV1) Set(val *PublishersSeriesListResponseV1) {
	v.value = val
	v.isSet = true
}

func (v NullablePublishersSeriesListResponseV1) IsSet() bool {
	return v.isSet
}

func (v *NullablePublishersSeriesListResponseV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublishersSeriesListResponseV1(val *PublishersSeriesListResponseV1) *NullablePublishersSeriesListResponseV1 {
	return &NullablePublishersSeriesListResponseV1{value: val, isSet: true}
}

func (v NullablePublishersSeriesListResponseV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublishersSeriesListResponseV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


