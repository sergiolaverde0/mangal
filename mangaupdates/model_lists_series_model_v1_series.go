/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ListsSeriesModelV1Series type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListsSeriesModelV1Series{}

// ListsSeriesModelV1Series struct for ListsSeriesModelV1Series
type ListsSeriesModelV1Series struct {
	Id    int64   `json:"id"`
	Title *string `json:"title,omitempty"`
}

// NewListsSeriesModelV1Series instantiates a new ListsSeriesModelV1Series object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListsSeriesModelV1Series(id int64) *ListsSeriesModelV1Series {
	this := ListsSeriesModelV1Series{}
	this.Id = id
	return &this
}

// NewListsSeriesModelV1SeriesWithDefaults instantiates a new ListsSeriesModelV1Series object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListsSeriesModelV1SeriesWithDefaults() *ListsSeriesModelV1Series {
	this := ListsSeriesModelV1Series{}
	return &this
}

// GetId returns the Id field value
func (o *ListsSeriesModelV1Series) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListsSeriesModelV1Series) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListsSeriesModelV1Series) SetId(v int64) {
	o.Id = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ListsSeriesModelV1Series) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListsSeriesModelV1Series) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ListsSeriesModelV1Series) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ListsSeriesModelV1Series) SetTitle(v string) {
	o.Title = &v
}

func (o ListsSeriesModelV1Series) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListsSeriesModelV1Series) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableListsSeriesModelV1Series struct {
	value *ListsSeriesModelV1Series
	isSet bool
}

func (v NullableListsSeriesModelV1Series) Get() *ListsSeriesModelV1Series {
	return v.value
}

func (v *NullableListsSeriesModelV1Series) Set(val *ListsSeriesModelV1Series) {
	v.value = val
	v.isSet = true
}

func (v NullableListsSeriesModelV1Series) IsSet() bool {
	return v.isSet
}

func (v *NullableListsSeriesModelV1Series) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListsSeriesModelV1Series(val *ListsSeriesModelV1Series) *NullableListsSeriesModelV1Series {
	return &NullableListsSeriesModelV1Series{value: val, isSet: true}
}

func (v NullableListsSeriesModelV1Series) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListsSeriesModelV1Series) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
