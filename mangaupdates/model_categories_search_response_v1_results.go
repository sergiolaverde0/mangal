/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CategoriesSearchResponseV1Results type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CategoriesSearchResponseV1Results{}

// CategoriesSearchResponseV1Results struct for CategoriesSearchResponseV1Results
type CategoriesSearchResponseV1Results struct {
	Record *CategoriesModelSearchV1 `json:"record,omitempty"`
}

// NewCategoriesSearchResponseV1Results instantiates a new CategoriesSearchResponseV1Results object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCategoriesSearchResponseV1Results() *CategoriesSearchResponseV1Results {
	this := CategoriesSearchResponseV1Results{}
	return &this
}

// NewCategoriesSearchResponseV1ResultsWithDefaults instantiates a new CategoriesSearchResponseV1Results object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCategoriesSearchResponseV1ResultsWithDefaults() *CategoriesSearchResponseV1Results {
	this := CategoriesSearchResponseV1Results{}
	return &this
}

// GetRecord returns the Record field value if set, zero value otherwise.
func (o *CategoriesSearchResponseV1Results) GetRecord() CategoriesModelSearchV1 {
	if o == nil || IsNil(o.Record) {
		var ret CategoriesModelSearchV1
		return ret
	}
	return *o.Record
}

// GetRecordOk returns a tuple with the Record field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CategoriesSearchResponseV1Results) GetRecordOk() (*CategoriesModelSearchV1, bool) {
	if o == nil || IsNil(o.Record) {
		return nil, false
	}
	return o.Record, true
}

// HasRecord returns a boolean if a field has been set.
func (o *CategoriesSearchResponseV1Results) HasRecord() bool {
	if o != nil && !IsNil(o.Record) {
		return true
	}

	return false
}

// SetRecord gets a reference to the given CategoriesModelSearchV1 and assigns it to the Record field.
func (o *CategoriesSearchResponseV1Results) SetRecord(v CategoriesModelSearchV1) {
	o.Record = &v
}

func (o CategoriesSearchResponseV1Results) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CategoriesSearchResponseV1Results) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Record) {
		toSerialize["record"] = o.Record
	}
	return toSerialize, nil
}

type NullableCategoriesSearchResponseV1Results struct {
	value *CategoriesSearchResponseV1Results
	isSet bool
}

func (v NullableCategoriesSearchResponseV1Results) Get() *CategoriesSearchResponseV1Results {
	return v.value
}

func (v *NullableCategoriesSearchResponseV1Results) Set(val *CategoriesSearchResponseV1Results) {
	v.value = val
	v.isSet = true
}

func (v NullableCategoriesSearchResponseV1Results) IsSet() bool {
	return v.isSet
}

func (v *NullableCategoriesSearchResponseV1Results) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCategoriesSearchResponseV1Results(val *CategoriesSearchResponseV1Results) *NullableCategoriesSearchResponseV1Results {
	return &NullableCategoriesSearchResponseV1Results{value: val, isSet: true}
}

func (v NullableCategoriesSearchResponseV1Results) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCategoriesSearchResponseV1Results) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


