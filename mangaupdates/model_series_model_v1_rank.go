/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SeriesModelV1Rank type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeriesModelV1Rank{}

// SeriesModelV1Rank struct for SeriesModelV1Rank
type SeriesModelV1Rank struct {
	Position *SeriesModelV1RankPosition `json:"position,omitempty"`
	OldPosition *SeriesModelV1RankOldPosition `json:"old_position,omitempty"`
	Lists *SeriesModelV1RankLists `json:"lists,omitempty"`
}

// NewSeriesModelV1Rank instantiates a new SeriesModelV1Rank object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeriesModelV1Rank() *SeriesModelV1Rank {
	this := SeriesModelV1Rank{}
	return &this
}

// NewSeriesModelV1RankWithDefaults instantiates a new SeriesModelV1Rank object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeriesModelV1RankWithDefaults() *SeriesModelV1Rank {
	this := SeriesModelV1Rank{}
	return &this
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *SeriesModelV1Rank) GetPosition() SeriesModelV1RankPosition {
	if o == nil || IsNil(o.Position) {
		var ret SeriesModelV1RankPosition
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesModelV1Rank) GetPositionOk() (*SeriesModelV1RankPosition, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *SeriesModelV1Rank) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given SeriesModelV1RankPosition and assigns it to the Position field.
func (o *SeriesModelV1Rank) SetPosition(v SeriesModelV1RankPosition) {
	o.Position = &v
}

// GetOldPosition returns the OldPosition field value if set, zero value otherwise.
func (o *SeriesModelV1Rank) GetOldPosition() SeriesModelV1RankOldPosition {
	if o == nil || IsNil(o.OldPosition) {
		var ret SeriesModelV1RankOldPosition
		return ret
	}
	return *o.OldPosition
}

// GetOldPositionOk returns a tuple with the OldPosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesModelV1Rank) GetOldPositionOk() (*SeriesModelV1RankOldPosition, bool) {
	if o == nil || IsNil(o.OldPosition) {
		return nil, false
	}
	return o.OldPosition, true
}

// HasOldPosition returns a boolean if a field has been set.
func (o *SeriesModelV1Rank) HasOldPosition() bool {
	if o != nil && !IsNil(o.OldPosition) {
		return true
	}

	return false
}

// SetOldPosition gets a reference to the given SeriesModelV1RankOldPosition and assigns it to the OldPosition field.
func (o *SeriesModelV1Rank) SetOldPosition(v SeriesModelV1RankOldPosition) {
	o.OldPosition = &v
}

// GetLists returns the Lists field value if set, zero value otherwise.
func (o *SeriesModelV1Rank) GetLists() SeriesModelV1RankLists {
	if o == nil || IsNil(o.Lists) {
		var ret SeriesModelV1RankLists
		return ret
	}
	return *o.Lists
}

// GetListsOk returns a tuple with the Lists field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeriesModelV1Rank) GetListsOk() (*SeriesModelV1RankLists, bool) {
	if o == nil || IsNil(o.Lists) {
		return nil, false
	}
	return o.Lists, true
}

// HasLists returns a boolean if a field has been set.
func (o *SeriesModelV1Rank) HasLists() bool {
	if o != nil && !IsNil(o.Lists) {
		return true
	}

	return false
}

// SetLists gets a reference to the given SeriesModelV1RankLists and assigns it to the Lists field.
func (o *SeriesModelV1Rank) SetLists(v SeriesModelV1RankLists) {
	o.Lists = &v
}

func (o SeriesModelV1Rank) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeriesModelV1Rank) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.OldPosition) {
		toSerialize["old_position"] = o.OldPosition
	}
	if !IsNil(o.Lists) {
		toSerialize["lists"] = o.Lists
	}
	return toSerialize, nil
}

type NullableSeriesModelV1Rank struct {
	value *SeriesModelV1Rank
	isSet bool
}

func (v NullableSeriesModelV1Rank) Get() *SeriesModelV1Rank {
	return v.value
}

func (v *NullableSeriesModelV1Rank) Set(val *SeriesModelV1Rank) {
	v.value = val
	v.isSet = true
}

func (v NullableSeriesModelV1Rank) IsSet() bool {
	return v.isSet
}

func (v *NullableSeriesModelV1Rank) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeriesModelV1Rank(val *SeriesModelV1Rank) *NullableSeriesModelV1Rank {
	return &NullableSeriesModelV1Rank{value: val, isSet: true}
}

func (v NullableSeriesModelV1Rank) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeriesModelV1Rank) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


