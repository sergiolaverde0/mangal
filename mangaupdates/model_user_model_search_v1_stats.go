/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserModelSearchV1Stats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserModelSearchV1Stats{}

// UserModelSearchV1Stats struct for UserModelSearchV1Stats
type UserModelSearchV1Stats struct {
	ForumPosts      *int64 `json:"forum_posts,omitempty"`
	AddedAuthors    *int64 `json:"added_authors,omitempty"`
	AddedGroups     *int64 `json:"added_groups,omitempty"`
	AddedPublishers *int64 `json:"added_publishers,omitempty"`
	AddedReleases   *int64 `json:"added_releases,omitempty"`
	AddedSeries     *int64 `json:"added_series,omitempty"`
}

// NewUserModelSearchV1Stats instantiates a new UserModelSearchV1Stats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserModelSearchV1Stats() *UserModelSearchV1Stats {
	this := UserModelSearchV1Stats{}
	return &this
}

// NewUserModelSearchV1StatsWithDefaults instantiates a new UserModelSearchV1Stats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserModelSearchV1StatsWithDefaults() *UserModelSearchV1Stats {
	this := UserModelSearchV1Stats{}
	return &this
}

// GetForumPosts returns the ForumPosts field value if set, zero value otherwise.
func (o *UserModelSearchV1Stats) GetForumPosts() int64 {
	if o == nil || IsNil(o.ForumPosts) {
		var ret int64
		return ret
	}
	return *o.ForumPosts
}

// GetForumPostsOk returns a tuple with the ForumPosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModelSearchV1Stats) GetForumPostsOk() (*int64, bool) {
	if o == nil || IsNil(o.ForumPosts) {
		return nil, false
	}
	return o.ForumPosts, true
}

// HasForumPosts returns a boolean if a field has been set.
func (o *UserModelSearchV1Stats) HasForumPosts() bool {
	if o != nil && !IsNil(o.ForumPosts) {
		return true
	}

	return false
}

// SetForumPosts gets a reference to the given int64 and assigns it to the ForumPosts field.
func (o *UserModelSearchV1Stats) SetForumPosts(v int64) {
	o.ForumPosts = &v
}

// GetAddedAuthors returns the AddedAuthors field value if set, zero value otherwise.
func (o *UserModelSearchV1Stats) GetAddedAuthors() int64 {
	if o == nil || IsNil(o.AddedAuthors) {
		var ret int64
		return ret
	}
	return *o.AddedAuthors
}

// GetAddedAuthorsOk returns a tuple with the AddedAuthors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModelSearchV1Stats) GetAddedAuthorsOk() (*int64, bool) {
	if o == nil || IsNil(o.AddedAuthors) {
		return nil, false
	}
	return o.AddedAuthors, true
}

// HasAddedAuthors returns a boolean if a field has been set.
func (o *UserModelSearchV1Stats) HasAddedAuthors() bool {
	if o != nil && !IsNil(o.AddedAuthors) {
		return true
	}

	return false
}

// SetAddedAuthors gets a reference to the given int64 and assigns it to the AddedAuthors field.
func (o *UserModelSearchV1Stats) SetAddedAuthors(v int64) {
	o.AddedAuthors = &v
}

// GetAddedGroups returns the AddedGroups field value if set, zero value otherwise.
func (o *UserModelSearchV1Stats) GetAddedGroups() int64 {
	if o == nil || IsNil(o.AddedGroups) {
		var ret int64
		return ret
	}
	return *o.AddedGroups
}

// GetAddedGroupsOk returns a tuple with the AddedGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModelSearchV1Stats) GetAddedGroupsOk() (*int64, bool) {
	if o == nil || IsNil(o.AddedGroups) {
		return nil, false
	}
	return o.AddedGroups, true
}

// HasAddedGroups returns a boolean if a field has been set.
func (o *UserModelSearchV1Stats) HasAddedGroups() bool {
	if o != nil && !IsNil(o.AddedGroups) {
		return true
	}

	return false
}

// SetAddedGroups gets a reference to the given int64 and assigns it to the AddedGroups field.
func (o *UserModelSearchV1Stats) SetAddedGroups(v int64) {
	o.AddedGroups = &v
}

// GetAddedPublishers returns the AddedPublishers field value if set, zero value otherwise.
func (o *UserModelSearchV1Stats) GetAddedPublishers() int64 {
	if o == nil || IsNil(o.AddedPublishers) {
		var ret int64
		return ret
	}
	return *o.AddedPublishers
}

// GetAddedPublishersOk returns a tuple with the AddedPublishers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModelSearchV1Stats) GetAddedPublishersOk() (*int64, bool) {
	if o == nil || IsNil(o.AddedPublishers) {
		return nil, false
	}
	return o.AddedPublishers, true
}

// HasAddedPublishers returns a boolean if a field has been set.
func (o *UserModelSearchV1Stats) HasAddedPublishers() bool {
	if o != nil && !IsNil(o.AddedPublishers) {
		return true
	}

	return false
}

// SetAddedPublishers gets a reference to the given int64 and assigns it to the AddedPublishers field.
func (o *UserModelSearchV1Stats) SetAddedPublishers(v int64) {
	o.AddedPublishers = &v
}

// GetAddedReleases returns the AddedReleases field value if set, zero value otherwise.
func (o *UserModelSearchV1Stats) GetAddedReleases() int64 {
	if o == nil || IsNil(o.AddedReleases) {
		var ret int64
		return ret
	}
	return *o.AddedReleases
}

// GetAddedReleasesOk returns a tuple with the AddedReleases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModelSearchV1Stats) GetAddedReleasesOk() (*int64, bool) {
	if o == nil || IsNil(o.AddedReleases) {
		return nil, false
	}
	return o.AddedReleases, true
}

// HasAddedReleases returns a boolean if a field has been set.
func (o *UserModelSearchV1Stats) HasAddedReleases() bool {
	if o != nil && !IsNil(o.AddedReleases) {
		return true
	}

	return false
}

// SetAddedReleases gets a reference to the given int64 and assigns it to the AddedReleases field.
func (o *UserModelSearchV1Stats) SetAddedReleases(v int64) {
	o.AddedReleases = &v
}

// GetAddedSeries returns the AddedSeries field value if set, zero value otherwise.
func (o *UserModelSearchV1Stats) GetAddedSeries() int64 {
	if o == nil || IsNil(o.AddedSeries) {
		var ret int64
		return ret
	}
	return *o.AddedSeries
}

// GetAddedSeriesOk returns a tuple with the AddedSeries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModelSearchV1Stats) GetAddedSeriesOk() (*int64, bool) {
	if o == nil || IsNil(o.AddedSeries) {
		return nil, false
	}
	return o.AddedSeries, true
}

// HasAddedSeries returns a boolean if a field has been set.
func (o *UserModelSearchV1Stats) HasAddedSeries() bool {
	if o != nil && !IsNil(o.AddedSeries) {
		return true
	}

	return false
}

// SetAddedSeries gets a reference to the given int64 and assigns it to the AddedSeries field.
func (o *UserModelSearchV1Stats) SetAddedSeries(v int64) {
	o.AddedSeries = &v
}

func (o UserModelSearchV1Stats) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserModelSearchV1Stats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ForumPosts) {
		toSerialize["forum_posts"] = o.ForumPosts
	}
	if !IsNil(o.AddedAuthors) {
		toSerialize["added_authors"] = o.AddedAuthors
	}
	if !IsNil(o.AddedGroups) {
		toSerialize["added_groups"] = o.AddedGroups
	}
	if !IsNil(o.AddedPublishers) {
		toSerialize["added_publishers"] = o.AddedPublishers
	}
	if !IsNil(o.AddedReleases) {
		toSerialize["added_releases"] = o.AddedReleases
	}
	if !IsNil(o.AddedSeries) {
		toSerialize["added_series"] = o.AddedSeries
	}
	return toSerialize, nil
}

type NullableUserModelSearchV1Stats struct {
	value *UserModelSearchV1Stats
	isSet bool
}

func (v NullableUserModelSearchV1Stats) Get() *UserModelSearchV1Stats {
	return v.value
}

func (v *NullableUserModelSearchV1Stats) Set(val *UserModelSearchV1Stats) {
	v.value = val
	v.isSet = true
}

func (v NullableUserModelSearchV1Stats) IsSet() bool {
	return v.isSet
}

func (v *NullableUserModelSearchV1Stats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserModelSearchV1Stats(val *UserModelSearchV1Stats) *NullableUserModelSearchV1Stats {
	return &NullableUserModelSearchV1Stats{value: val, isSet: true}
}

func (v NullableUserModelSearchV1Stats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserModelSearchV1Stats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
