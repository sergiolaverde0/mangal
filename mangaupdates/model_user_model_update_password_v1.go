/*
MangaUpdates API

This API powers our website. Most API functions are public and do not require an account. For user-based functions, you must register an account. Currently, user registration must be done through our main website and is disabled via this API.  Download OpenAPI Specification: [openapi.yaml](openapi.yaml)  Please contact us at the following emails if you have questions:  * lambchopsil@mangaupdates.com * manick@mangaupdates.com  ## Warranties  MangaUpdates makes no warranties about service availability, correctness of the data, or anything else. The service is provided as is, and may change at any time.  ## Acceptable Use Policy  * You will credit MangaUpdates when using data provided by this API. * You will use reasonable spacing between requests so as not to overwhelm the MangaUpdates servers, and employ caching mechanisms when accessing data. * You will NOT use MangaUpdates data or API in a way that will:     * Deceive or defraud users     * Assist or perform an illegal action     * Create spam     * Damage the database  We reserve the right to change this policy at any time.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UserModelUpdatePasswordV1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserModelUpdatePasswordV1{}

// UserModelUpdatePasswordV1 struct for UserModelUpdatePasswordV1
type UserModelUpdatePasswordV1 struct {
	Password *string `json:"password,omitempty"`
}

// NewUserModelUpdatePasswordV1 instantiates a new UserModelUpdatePasswordV1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserModelUpdatePasswordV1() *UserModelUpdatePasswordV1 {
	this := UserModelUpdatePasswordV1{}
	return &this
}

// NewUserModelUpdatePasswordV1WithDefaults instantiates a new UserModelUpdatePasswordV1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserModelUpdatePasswordV1WithDefaults() *UserModelUpdatePasswordV1 {
	this := UserModelUpdatePasswordV1{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UserModelUpdatePasswordV1) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserModelUpdatePasswordV1) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UserModelUpdatePasswordV1) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UserModelUpdatePasswordV1) SetPassword(v string) {
	o.Password = &v
}

func (o UserModelUpdatePasswordV1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserModelUpdatePasswordV1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

type NullableUserModelUpdatePasswordV1 struct {
	value *UserModelUpdatePasswordV1
	isSet bool
}

func (v NullableUserModelUpdatePasswordV1) Get() *UserModelUpdatePasswordV1 {
	return v.value
}

func (v *NullableUserModelUpdatePasswordV1) Set(val *UserModelUpdatePasswordV1) {
	v.value = val
	v.isSet = true
}

func (v NullableUserModelUpdatePasswordV1) IsSet() bool {
	return v.isSet
}

func (v *NullableUserModelUpdatePasswordV1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserModelUpdatePasswordV1(val *UserModelUpdatePasswordV1) *NullableUserModelUpdatePasswordV1 {
	return &NullableUserModelUpdatePasswordV1{value: val, isSet: true}
}

func (v NullableUserModelUpdatePasswordV1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserModelUpdatePasswordV1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


